## Lundi 2022/01/10

Débrief examen de vendredi d'avant par Esat.

### Approfondissement jquery

=> `$` est le nom de la fonction `jQuery` (oui c'est bizarre !).

#### Fonctionnement

Quand je fais en jquery : 

```js
$('thead').addClass('hello');
```

je fais 2 actions successives :

1. je récupère l'élement HTML associé au selector
2. je déclenche la fonction "addClass" de jquery qui ajoute la classe dans le html sur l'élement récupéré en 1 !!!!!

#### Reprise sur les getter/setter

```js
/** getter = pour recuperer la valeur d'un champs du formulaire (input,select,textarea...)
 * utiliser :
 */
const res = $(selecteur).val() 
/**
 *  setter =pour modifier la valeur d'un champs du formulaire (input,select,textarea...)
 * utiliser : 
 */
$(selecteur).val("la nouvelle valeur") 

/** getter = pour recuperer le text d'une balise (div,p,span...)
 *  on utilise :
 */
const res2 = $(selecteur).text() 
/**
 *  setter = pour modifier le text d'une balise (div,p,span...)
 *  on utilise :
 */
$(selecteur).text("le nouveau text") 

/** getter = pour recuperer le html d'une balise (div,p,span...)
 *  on utilise :
 */
const res3 = $(selecteur).html() 
/**
 *  setter = pour modifier le html d'une balise (div,p,span...)
 *  on utilise :
 */
$(selecteur).html("<p>le nouveau html</p>") 

/** getter = pour recuperer l'attribut d'une balise quelconque (ex: href pour a ..)
 *  on utilise :
 */
const res4 = $(selecteur).attr('href') 
/**
 *  setter = pour modifier un attribut d'une balise (div,p,span...)
 *  on utilise :
 */
$(selecteur).attr('href', 'https://impots.gouv.fr') 
```

#### Exercices jQuery W3schools

[w3schools](https://www.w3schools.com/jquery/exercise_jq.asp?filename=exercise_jq_selectors1)

On les fait presque tous  (selectors , get, set, add, remove, hide and show, etc.) sauf events surtout

#### Découverte des "Events"

en français les "événements"

=> on est capables de déclencher des fonctions javascript , lorsque certains "events" ont lieu

2 parties prenantes dans ce sujet :

1. l'événement en tant que tel associé à l'élément HTML qui l'a déclenché
2. la fonction qui "écoute" les événements, pour se déclencher quand elle en voit un passer qui correspond à ce qu'elle attend

```js
$("button").click(function(){
  $(this).hide();
});
```

⚠️  attention, ça ne veut pas dire que le js déclenche le click, mais qu'il réagit s'il y a un clic !

ici le this correspond à l'élément qui a déclenché l'événement, donc c'est "button" et $(this) ça nous renvoie le bouton en version "jquery".

##### Syntaxe bis

```js
$(selector).on("event", function(){ .....;});
```

avec "event" : "click", "dblclik" etc.

#### Nouveautés

* méthodes :
  * une fonction : `xxxx(yyy)` : la fonction est générique
  * une méthode : `machin.xxxx(yyy)` : la fonction s'applique sur machin
* callback
* this

### Exercice

> Faire un formulaire

1. validation des champs email quand j'écris dans chaque intput (keypress) et souligner en rouge tant que c'est faux
2. changer la couleur du bouton en "gris" et non cliquable (désactivé), quand on clique sur "envoyer"
3. Afficher l'aide au survol des inputs (et ça change le texte en orange)

#### Correction 1

```js
$('input').on("keypress", function (){
  const input = $(this);
  const inputVal = input.val();
  if (!/^[\w]+@[\w]+\.[\w]{1,3}$/.test(inputVal)) {
    input.addClass("error");
  } else {
    input.removeClass("error");
  }
})
```
